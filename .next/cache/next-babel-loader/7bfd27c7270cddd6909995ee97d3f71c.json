{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\n    query getProducts($ids: [ID!]!) {\n        nodes(ids: $ids) {\n            ... on Product {\n                title\n                handle\n                descriptionHtml\n                id\n                images(first: 1) {\n                    edges {\n                        node {\n                            originalSrc\n                            altText\n                        }\n                    }\n                }\n                variants(first: 1) {\n                    edges {\n                        node {\n                            price\n                            id\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return __jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n      if (error) return __jsx(\"div\", null, error.message);\n      console.log(data);\n      return __jsx(Card, null, __jsx(\"p\", null, \"stuff here\"));\n    });\n  }\n\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["C:/Users/KiraMed/PhpstormProjects/deliva-shopyfy-plugin/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","React","Component","render","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,SACIC,IADJ,EAEIC,YAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,SALJ,QAMO,kBANP;AAOA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,kBAAkB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA6BA,MAAMS,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AACnDC,EAAAA,MAAM,GAAG;AACL,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AACA,WACI,MAAC,KAAD;AAAO,MAAA,KAAK,EAAER,kBAAd;AAAkC,MAAA,SAAS,EAAE;AAAES,QAAAA,GAAG,EAAEV,KAAK,CAACW,GAAN,CAAU,KAAV;AAAP;AAA7C,OACK,CAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA,OAAP;AAAgBC,MAAAA;AAAhB,KAAD,KAA4B;AACzB,UAAID,OAAJ,EAAa,OAAO,mCAAP;AACb,UAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACC,OAAZ,CAAP;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,aACI,MAAC,IAAD,QACI,8BADJ,CADJ;AAKH,KAVL,CADJ;AAcH;;AAjBkD;;AAoBvD,eAAeV,wBAAf","sourcesContent":["import gql from 'graphql-tag';\r\nimport {Query} from 'react-apollo';\r\nimport {\r\n    Card,\r\n    ResourceList,\r\n    Stack,\r\n    TextStyle,\r\n    Thumbnail,\r\n} from '@shopify/polaris';\r\nimport store from 'store-js';\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n    query getProducts($ids: [ID!]!) {\r\n        nodes(ids: $ids) {\r\n            ... on Product {\r\n                title\r\n                handle\r\n                descriptionHtml\r\n                id\r\n                images(first: 1) {\r\n                    edges {\r\n                        node {\r\n                            originalSrc\r\n                            altText\r\n                        }\r\n                    }\r\n                }\r\n                variants(first: 1) {\r\n                    edges {\r\n                        node {\r\n                            price\r\n                            id\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n    render() {\r\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\r\n        return (\r\n            <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\r\n                {({data, loading, error}) => {\r\n                    if (loading) return <div>Loadingâ€¦</div>;\r\n                    if (error) return <div>{error.message}</div>;\r\n                    console.log(data);\r\n                    return (\r\n                        <Card>\r\n                            <p>stuff here</p>\r\n                        </Card>\r\n                    );\r\n                }}\r\n            </Query>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}