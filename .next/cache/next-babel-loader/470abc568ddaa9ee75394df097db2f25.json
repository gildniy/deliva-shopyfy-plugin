{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport React from \"react\";\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/dist/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ClientRouter from '../components/ClientRouter';\n\nclass MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const idsFromResources = resources.selection.map(product => product.id);\n      this.setState({\n        open: false\n      });\n      console.log(resources);\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const {\n      SHOPIFY_API_KEY\n    } = process.env;\n    const config = {\n      apiKey: SHOPIFY_API_KEY,\n      shopOrigin: Cookies.get(\"shopOrigin\"),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(ClientRouter, null), __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(Component, pageProps))));\n  }\n\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/KiraMed/PhpstormProjects/deliva-shopyfy-plugin/pages/_app.js"],"names":["App","Head","React","AppProvider","Provider","translations","Cookies","ClientRouter","MyApp","resources","idsFromResources","selection","map","product","id","setState","open","console","log","render","Component","pageProps","props","SHOPIFY_API_KEY","process","env","config","apiKey","shopOrigin","get","forceRedirect"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,QAAR,QAAuB,2BAAvB;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAEA,MAAMC,KAAN,SAAoBR,GAApB,CAAwB;AAAA;AAAA;;AAAA,6CAoBDS,SAAD,IAAe;AAC7B,YAAMC,gBAAgB,GAAGD,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAyBC,OAAD,IAAaA,OAAO,CAACC,EAA7C,CAAzB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH,KAxBmB;AAAA;;AACpBU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAyB,KAAKC,KAApC;AACA,UAAM;AAACC,MAAAA;AAAD,QAAoBC,OAAO,CAACC,GAAlC;AACA,UAAMC,MAAM,GAAG;AAACC,MAAAA,MAAM,EAAEJ,eAAT;AAA0BK,MAAAA,UAAU,EAAEtB,OAAO,CAACuB,GAAR,CAAY,YAAZ,CAAtC;AAAiEC,MAAAA,aAAa,EAAE;AAAhF,KAAf;AACA,WACI,MAAC,KAAD,CAAO,QAAP,QACI,MAAC,IAAD,QACI,kCADJ,EAEI;AAAM,MAAA,OAAO,EAAC;AAAd,MAFJ,CADJ,EAKI,MAAC,QAAD;AAAU,MAAA,MAAM,EAAEJ;AAAlB,OACI,MAAC,YAAD,OADJ,EAEI,MAAC,WAAD;AAAa,MAAA,IAAI,EAAErB;AAAnB,OACI,MAAC,SAAD,EAAegB,SAAf,CADJ,CAFJ,CALJ,CADJ;AAcH;;AAnBmB;;AA2BxB,eAAeb,KAAf","sourcesContent":["import App from 'next/app';\r\nimport Head from 'next/head';\r\nimport React from \"react\";\r\nimport {AppProvider} from '@shopify/polaris';\r\nimport {Provider} from '@shopify/app-bridge-react';\r\nimport '@shopify/polaris/dist/styles.css';\r\nimport translations from '@shopify/polaris/locales/en.json';\r\nimport Cookies from 'js-cookie';\r\nimport ClientRouter from '../components/ClientRouter';\r\n\r\nclass MyApp extends App {\r\n    render() {\r\n        const {Component, pageProps} = this.props;\r\n        const {SHOPIFY_API_KEY} = process.env;\r\n        const config = {apiKey: SHOPIFY_API_KEY, shopOrigin: Cookies.get(\"shopOrigin\"), forceRedirect: true};\r\n        return (\r\n            <React.Fragment>\r\n                <Head>\r\n                    <title>Sample App</title>\r\n                    <meta charSet=\"utf-8\"/>\r\n                </Head>\r\n                <Provider config={config}>\r\n                    <ClientRouter />\r\n                    <AppProvider i18n={translations}>\r\n                        <Component {...pageProps} />\r\n                    </AppProvider>\r\n                </Provider>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    handleSelection = (resources) => {\r\n        const idsFromResources = resources.selection.map((product) => product.id);\r\n        this.setState({ open: false });\r\n        console.log(resources);\r\n    };\r\n}\r\n\r\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}